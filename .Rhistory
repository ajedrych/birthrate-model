length = 1000)
plotNormalHistogram(df1$birth_rate, prob = FALSE,
main = "birth_rate and normal distribution",
col = "red"
length = 1000)
plotNormalHistogram(df1$birth_rate, prob = FALSE,
main = "birth_rate and normal distribution",
col = "red",
length = 1000)
plotNormalHistogram(df1$birth_rate, prob = FALSE,
main = "birth_rate and normal distribution",
linecol = "red",
length = 1000)
df1$ln_birth_rate = log(df1$birth_rate)
plotNormalHistogram(df1$ln_birth_rate, prob = FALSE,
main = "ln_birth_rate and normal distribution",
linecol = "red",
length = 1000)
View(h)
View(h)
########################### CREATE INTERACTION BETWEEN VARIABLES ###########################
df1$nurseryxchildren=df1$nursery_places*df1$children
df1$education_expenditurexchildren=df1$education_expenditure*df1$children
model1=lm(ln_birth_rate~covid19_cases + covid19_deaths + covid19_quarantine + marriage_rate + divorce_rate +
budget_reve_pc + unemployment_rate + women_reproductive + femininity_ratio + avg_salary + women_working +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + family_benefits +
urbanisation_rate + bus_stops, data=df1)
summary(model1)
#test reset
resettest(model1, power=2:3, type="fitted")
resettest(model1, power=2:3, type="regressor")
########################### VARIABLES CHECKING ###########################
#VARIABLE MARRIAGE RATE
hist(df1$marriage_rate)
df1$ln_marriage_rate = log(df1$marriage_rate)
hist(df1$ln_marriage_rate)
plotNormalHistogram(df1$marriage_rate, prob = FALSE,
main = "marriage_rate and normal distribution",
linecol = "red",
length = 1000)
df1$ln_marriage_rate = log(df1$marriage_rate)
plotNormalHistogram(df1$ln_marriage_rate, prob = FALSE,
main = "ln_marriage_rate and normal distribution",
linecol = "red",
length = 1000)
#UNEMPLOYMENT RATE
plotNormalHistogram(df1$unemployment_rate, prob = FALSE,
main = "unemployment_rate and normal distribution",
linecol = "red",
length = 1000)
df1$ln_unemployment_rate = log(df1$unemployment_rate)
plotNormalHistogram(df1$ln_unemployment_rate, prob = FALSE,
main = "unemployment_rate and normal distribution",
linecol = "red",
length = 1000)
summary(model2)
#MODEL2
model2=lm(ln_birth_rate~covid19_cases + covid19_deaths + covid19_quarantine + marriage_rate + divorce_rate +
budget_reve_pc + ln_unemployment_rate + women_reproductive + femininity_ratio + avg_salary + women_working +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + family_benefits +
urbanisation_rate + bus_stops, data=df1)
summary(model2)
#test reset
resettest(model2, power=2:3, type="fitted")
df1$budget_reve_pc_2 = df1$budget_reve_pc**2
#MODEL2
model2=lm(ln_birth_rate~covid19_cases + covid19_deaths + covid19_quarantine + marriage_rate + divorce_rate +
budget_reve_pc + budget_reve_pc_2+ ln_unemployment_rate + women_reproductive + femininity_ratio + avg_salary + women_working +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + family_benefits +
urbanisation_rate + bus_stops, data=df1)
summary(model2)
#test reset
resettest(model2, power=2:3, type="fitted")
df1$women_reproductive_2 = df1$women_reproductive**2
#MODEL2
model2=lm(ln_birth_rate~covid19_cases + covid19_deaths + covid19_quarantine + marriage_rate + divorce_rate +
budget_reve_pc + budget_reve_pc_2+ ln_unemployment_rate + women_reproductive +women_reproductive_2+ femininity_ratio + avg_salary + women_working +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + family_benefits +
urbanisation_rate + bus_stops, data=df1)
summary(model2)
#test reset
resettest(model2, power=2:3, type="fitted")
#MODEL2
model2=lm(ln_birth_rate~covid19_cases + covid19_deaths + covid19_quarantine + marriage_rate + divorce_rate +
budget_reve_pc + budget_reve_pc_2+ ln_unemployment_rate + women_reproductive_2 + femininity_ratio + avg_salary + women_working +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + family_benefits +
urbanisation_rate + bus_stops, data=df1)
summary(model2)
#MODEL 1
model1=lm(ln_birth_rate~covid19_cases + covid19_deaths + covid19_quarantine + marriage_rate + divorce_rate +
budget_reve_pc + unemployment_rate + women_reproductive + femininity_ratio + avg_salary + women_working +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + family_benefits +
urbanisation_rate + bus_stops, data=df1)
summary(model1)
#MODEL2
model2=lm(ln_birth_rate~covid19_cases + covid19_deaths + covid19_quarantine + marriage_rate + divorce_rate +
budget_reve_pc + budget_reve_pc_2+ ln_unemployment_rate + women_reproductive + femininity_ratio + avg_salary + women_working +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + family_benefits +
urbanisation_rate + bus_stops, data=df1)
summary(model2)
#MODEL2
model2=lm(ln_birth_rate~covid19_cases + covid19_deaths + covid19_quarantine + marriage_rate + divorce_rate +
budget_reve_pc + ln_unemployment_rate + women_reproductive +women_reproductive_2+ femininity_ratio + avg_salary + women_working +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + family_benefits +
urbanisation_rate + bus_stops, data=df1)
summary(model2)
#MODEL2
model2=lm(ln_birth_rate~covid19_cases + covid19_deaths + covid19_quarantine + marriage_rate + divorce_rate +
budget_reve_pc + ln_unemployment_rate + women_reproductive + femininity_ratio + avg_salary + women_working +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + family_benefits +
urbanisation_rate + bus_stops, data=df1)
summary(model2)
#MODEL 1
model1=lm(ln_birth_rate~covid19_cases + covid19_deaths + covid19_quarantine + marriage_rate + divorce_rate +
budget_reve_pc + unemployment_rate + women_reproductive + femininity_ratio + avg_salary + women_working +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + family_benefits +
urbanisation_rate + bus_stops, data=df1)
summary(model1)
#MODEL 1
model1=lm(ln_birth_rate~covid19_cases + covid19_deaths + covid19_quarantine + marriage_rate + divorce_rate +
budget_reve_pc + unemployment_rate + women_reproductive + femininity_ratio + avg_salary + women_working +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model1)
plotNormalHistogram(df1$covid19_quarantine, prob = FALSE,
main = "marriage_rate and normal distribution",
linecol = "red",
length = 1000)
df1$ln_covid19_quarantine = log(df1$covid19_quarantine)
plotNormalHistogram(df1$ln_covid19_quarantine, prob = FALSE,
main = "ln_covid19_quarantine and normal distribution",
linecol = "red",
length = 1000)
g_ln_covid19_quarantine<-ggplot(df1, aes(x=birth_rate, y=ln_covid19_quarantine)) +geom_point(color="red")
g_ln_covid19_quarantine
model2=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
budget_reve_pc + unemployment_rate + women_reproductive + femininity_ratio + avg_salary + women_working +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model2)
#test reset
resettest(model2, power=2:3, type="fitted")
########################### VARIABLES CHECKING ###########################
#VARIABLE BUDGET_REVE_PC
plotNormalHistogram(df1$budget_reve_pc, prob = FALSE,
main = "budget_reve_pc and normal distribution",
linecol = "red",
length = 1000)
df1$ln_budget_reve_pc = log(df1$budget_reve_pc)
plotNormalHistogram(df1$ln_budget_reve_pc, prob = FALSE,
main = "ln_budget_reve_pc and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$budget_reve_pc_2, prob = FALSE,
main = "ln_budget_reve_pc and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$ln_budget_reve_pc, prob = FALSE,
main = "ln_budget_reve_pc and normal distribution",
linecol = "red",
length = 1000)
g_ln_budget_reve_pc<-ggplot(df1, aes(x=birth_rate, y=ln_budget_reve_pc)) +geom_point(color="red")
g_ln_budget_reve_pc
########################### THIRD MODEL ###########################
#MODEL 3
model3=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary + women_working +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model3)
#test reset
resettest(model3, power=2:3, type="fitted")
########################### VARIABLES CHECKING ###########################
#VARIABLE WOMEN_WORKING
plotNormalHistogram(df1$women_working, prob = FALSE,
main = "women_working and normal distribution",
linecol = "red",
length = 1000)
df1$ln_women_working = log(df1$women_working)
plotNormalHistogram(df1$ln_women_working, prob = FALSE,
main = "ln_women_working and normal distribution",
linecol = "red",
length = 1000)
g_ln_women_working<-ggplot(df1, aes(x=birth_rate, y=ln_women_working)) +geom_point(color="red")
g_ln_women_working
df1$women_working_2 = df1$women_working**2
plotNormalHistogram(df1$ln_women_working, prob = FALSE,
main = "ln_women_working and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$women_working_2, prob = FALSE,
main = "women_working_2 and normal distribution",
linecol = "red",
length = 1000)
model4=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + ln_women_reproductive + femininity_ratio + avg_salary + women_working +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model4)
########################### FOURTH MODEL ###########################
#MODEL 4
model4=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary + ln_women_working +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model4)
########################### FOURTH MODEL ###########################
#MODEL 4
model4=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary + women_working_2 +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model4)
#test reset
resettest(model4, power=2:3, type="fitted")
resettest(model4, power=2:3, type="regressor")
########################### FOURTH MODEL ###########################
#MODEL 4
model4=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model4)
#test reset
resettest(model4, power=2:3, type="fitted")
resettest(model4, power=2:3, type="regressor")
########################### FOURTH MODEL ###########################
#MODEL 4
model4=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary + women_working +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model4)
########################### FOURTH MODEL ###########################
#MODEL 4
model4=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary + ln_women_working +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model4)
########################### FOURTH MODEL ###########################
#MODEL 4
model4=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model4)
########################### VARIABLES CHECKING ###########################
#VARIABLE AVG_PEOPLE_PER_HOUSE
g_avg_people_per_house<-ggplot(df1, aes(x=birth_rate, y=avg_people_per_house)) +geom_point(color="red")
g_avg_people_per_house
plotNormalHistogram(df1$avg_people_per_house, prob = FALSE,
main = "women_working and normal distribution",
linecol = "red",
length = 1000)
df1$ln_avg_people_per_house = log(df1$avg_people_per_house)
plotNormalHistogram(df1$ln_avg_people_per_house, prob = FALSE,
main = "ln_avg_people_per_house and normal distribution",
linecol = "red",
length = 1000)
g_ln_avg_people_per_house<-ggplot(df1, aes(x=birth_rate, y=ln_avg_people_per_house)) +geom_point(color="red")
g_ln_avg_people_per_house
plotNormalHistogram(df1$ln_avg_people_per_house, prob = FALSE,
main = "ln_avg_people_per_house and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$avg_people_per_house, prob = FALSE,
main = "women_working and normal distribution",
linecol = "red",
length = 1000)
df1$avg_people_per_house_2 = df1$avg_people_per_house**2
g_avg_people_per_house<-ggplot(df1, aes(x=birth_rate, y=avg_people_per_house)) +geom_point(color="red")
g_avg_people_per_house
g_avg_people_per_house_2<-ggplot(df1, aes(x=birth_rate, y=avg_people_per_house_2)) +geom_point(color="red")
g_avg_people_per_house_2
plotNormalHistogram(df1$avg_people_per_house_2, prob = FALSE,
main = "women_working and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$avg_people_per_house, prob = FALSE,
main = "women_working and normal distribution",
linecol = "red",
length = 1000)
########################### FIFTH MODEL ###########################
#MODEL 5
model5=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house_2 + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model5)
########################### FIFTH MODEL ###########################
#MODEL 5
model5=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + ln_avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model5)
#test reset
resettest(model5, power=2:3, type="fitted")
########################### FIFTH MODEL ###########################
#MODEL 5
model5=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model5)
########################### FOURTH MODEL ###########################
#MODEL 4
model4=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + avg_people_per_house + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model4)
########################### FIFTH MODEL ###########################
#MODEL 5
model5=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model5)
resettest(model5, power=2:3, type="fitted")
model5=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model5)
########################### VARIABLES CHECKING ###########################
#VARIABLE URBANISATION_RATE
g_urbanisation_rate<-ggplot(df1, aes(x=birth_rate, y=urbanisation_rate)) +geom_point(color="red")
g_urbanisation_rate
plotNormalHistogram(df1$urbanisation_rate, prob = FALSE,
main = "women_working and normal distribution",
linecol = "red",
length = 1000)
df1$ln_urbanisation_rate = log(df1$urbanisation_rate)
plotNormalHistogram(df1$ln_urbanisation_rate, prob = FALSE,
main = "ln_urbanisation_rate and normal distribution",
linecol = "red",
length = 1000)
df1$urbanisation_rate_2 = df1$urbanisation_rate**2
plotNormalHistogram(df1$urbanisation_ratee_2, prob = FALSE,
main = "women_working and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$urbanisation_rate_2, prob = FALSE,
main = "women_working and normal distribution",
linecol = "red",
length = 1000)
########################### SIXTH MODEL ###########################
#MODEL 6
model6=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model6)
########################### SIXTH MODEL ###########################
#MODEL 6
model6=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
ln_urbanisation_rate + bus_stops, data=df1)
summary(model6)
#test reset
resettest(model6, power=2:3, type="fitted")
########################### SIXTH MODEL ###########################
#MODEL 6
model6=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate_2 + bus_stops, data=df1)
summary(model6)
########################### FIFTH MODEL ###########################
#MODEL 5
model5=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors  +
urbanisation_rate + bus_stops, data=df1)
summary(model5)
########################### SIXTH MODEL ###########################
#MODEL 6
model6=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + bus_stops, data=df1)
summary(model6)
resettest(model6, power=2:3, type="fitted")
g_ln_urbanisation_rate<-ggplot(df1, aes(x=birth_rate, y=ln_urbanisation_rate)) +geom_point(color="red")
g_ln_urbanisation_rate
plotNormalHistogram(df1$urbanisation_rate, prob = FALSE,
main = "urbanisation_rate and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$ln_urbanisation_rate, prob = FALSE,
main = "ln_urbanisation_rate and normal distribution",
linecol = "red",
length = 1000)
########################### SIXTH MODEL ###########################
#MODEL 6
model6=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + bus_stops, data=df1)
summary(model6)
########################### SIXTH MODEL ###########################
#MODEL 6
model6=lm(ln_birth_rate~covid19_cases + covid19_deaths + covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + bus_stops, data=df1)
summary(model6)
########################### SIXTH MODEL ###########################
#MODEL 6
model6=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + bus_stops, data=df1)
summary(model6)
model7=lm(ln_birth_rate~covid19_cases + covid19_deaths + ln_covid19_quarantine + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + bus_stops, data=df1)
summary(model7)
########################### SEVENTH MODEL ###########################
#MODEL 7
model7=lm(ln_birth_rate~covid19_cases + covid19_deaths + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + bus_stops, data=df1)
summary(model7)
########################### VARIABLES CHECKING ###########################
#VARIABLE FEMININITY_RATE
g_femininity_ratio<-ggplot(df1, aes(x=birth_rate, y=femininity_ratio)) +geom_point(color="red")
g_femininity_ratio
plotNormalHistogram(df1$femininity_ratio, prob = FALSE,
main = "femininity_ratio and normal distribution",
linecol = "red",
length = 1000)
df1$ln_femininity_ratio = log(df1$femininity_ratio)
plotNormalHistogram(df1$ln_femininity_ratio, prob = FALSE,
main = "ln_femininity_ratio and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$femininity_ratio, prob = FALSE,
main = "femininity_ratio and normal distribution",
linecol = "red",
length = 1000)
g_ln_femininity_ratio<-ggplot(df1, aes(x=birth_rate, y=ln_femininity_ratio)) +geom_point(color="red")
g_ln_femininity_ratio
df1$femininity_ratio_2 = df1$femininity_ratio**2
hist(df1$femininity_ratio_2)
plotNormalHistogram(df1$ln_femininity_ratio, prob = FALSE,
main = "ln_femininity_ratio and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$femininity_ratio, prob = FALSE,
main = "femininity_ratio and normal distribution",
linecol = "red",
length = 1000)
########################### EIGHTH MODEL ###########################
#MODEL 8
model8=lm(ln_birth_rate~covid19_cases + covid19_deaths + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + bus_stops, data=df1)
summary(model8)
########################### EIGHTH MODEL ###########################
#MODEL 8
model8=lm(ln_birth_rate~covid19_cases + covid19_deaths + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + bus_stops, data=df1)
summary(model8)
########################### EIGHTH MODEL ###########################
#MODEL 8
model8=lm(ln_birth_rate~covid19_cases + covid19_deaths + marriage_rate + divorce_rate +
unemployment_rate + women_reproductive + avg_salary +
men_working + median_house_price + house_ratio + houses_area_pc + education_expenditurexchildren +
health_expenditure + social_expenditure + family_expenditure + nurseryxchildren + doctors + bus_stops, data=df1)
summary(model8)
#test reset
resettest(model8, power=2:3, type="fitted")
resettest(model8, power=2:3, type="regressor")
