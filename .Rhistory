plotNormalHistogram(df1$men_working, prob = FALSE,
main = "men_working and normal distribution",
linecol = "red",
length = 1000)
df1$ln_men_working = log(df1$men_working)
plotNormalHistogram(df1$ln_men_working, prob = FALSE,
main = "ln_women_working and normal distribution",
linecol = "red",
length = 1000)
g_ln_men_working<-ggplot(df1, aes(x=birth_rate, y=ln_men_working)) +geom_point(color="red")
g_ln_men_working
jarque.bera.test(df1$men_working) #p-value < 0.05, I reject H0 about normal distribution
jarque.bera.test(df1$ln_men_working) #p-value > 0.05
########################### VARIABLES CHECKING ###########################
#VARIABLE MEDIAN_HOUSE_PRICE
jarque.bera.test(df1$median_house_price) #p-value < 0.05, I reject H0 about normal distribution
df1$ln_median_house_price = log(df1$median_house_price)
jarque.bera.test(df1$ln_median_house_price) #p-value < 0.05, but higher than in previous case
plotNormalHistogram(df1$median_house_price, prob = FALSE,
main = "median_house_price and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$ln_median_house_price, prob = FALSE,
main = "ln_median_house_price and normal distribution",
linecol = "red",
length = 1000)
#ln_median_house_price will be placed in model
########################### VARIABLES CHECKING ###########################
#VARIABLE HOUSE_RATIO
jarque.bera.test(df1$house_ratio) #p-value < 0.05, I reject H0 about normal distribution
df1$ln_house_ratio = log(df1$house_ratio)
jarque.bera.test(df1$ln_house_ratio) #p-value < 0.05
plotNormalHistogram(df1$house_ratio, prob = FALSE,
main = "house_ratio and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$ln_house_ratio, prob = FALSE,
main = "ln_house_ratio and normal distribution",
linecol = "red",
length = 1000)
#house_ratio will be placed in model
########################### VARIABLES CHECKING ###########################
#VARIABLE HOUSES_AREA_PC
jarque.bera.test(df1$houses_area_pc) #p-value < 0.05, I reject H0 about normal distribution
df1$ln_houses_area_pc = log(df1$houses_area_pc)
jarque.bera.test(df1$ln_houses_area_pc) #p-value < 0.05
plotNormalHistogram(df1$houses_area_pc, prob = FALSE,
main = "houses_area_pc and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$ln_houses_area_pc, prob = FALSE,
main = "ln_houses_area_pc and normal distribution",
linecol = "red",
length = 1000)
#i decided to place in model houses_area_pc variable
########################### VARIABLES CHECKING ###########################
#VARIABLE AVG_PEOPLE_PER_HOUSE
jarque.bera.test(df1$avg_people_per_house) #p-value > 0.05
########################### VARIABLES CHECKING ###########################
#VARIABLE EDUCATION_EXPENDITURE
jarque.bera.test(df1$education_expenditure) #p-value < 0.05, I reject H0 about normal distribution
df1$ln_education_expenditure = log(df1$education_expenditure)
jarque.bera.test(df1$ln_education_expenditure) #p-value < 0.05
plotNormalHistogram(df1$education_expenditure, prob = FALSE,
main = "education_expenditure and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$ln_education_expenditure, prob = FALSE,
main = "ln_education_expenditure and normal distribution",
linecol = "red",
length = 1000)
#variable with or without log looks similar, so teh basic version will be placed in model
########################### VARIABLES CHECKING ###########################
#VARIABLE HEALTH_EXPENDITURE
jarque.bera.test(df1$health_expenditure) #p-value < 0.05, I reject H0 about normal distribution
df1$ln_health_expenditure = log(df1$health_expenditure)
jarque.bera.test(df1$ln_health_expenditure) #p-value < 0.05
plotNormalHistogram(df1$health_expenditure, prob = FALSE,
main = "health_expenditure and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$ln_health_expenditure, prob = FALSE,
main = "ln_health_expenditure and normal distribution",
linecol = "red",
length = 1000)
#health_expenditure will be placed in model
########################### VARIABLES CHECKING ###########################
#VARIABLE SOCIAL_EXPENDITURE
jarque.bera.test(df1$social_expenditure) #p-value < 0.05, I reject H0 about normal distribution
df1$ln_social_expenditure = log(df1$social_expenditure)
jarque.bera.test(df1$ln_social_expenditure) #p-value < 0.05, but p-value is higher
plotNormalHistogram(df1$social_expenditure, prob = FALSE,
main = "social_expenditure and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$ln_social_expenditure, prob = FALSE,
main = "ln_social_expenditure and normal distribution",
linecol = "red",
length = 1000)
#ln_social_expenditure will be placed in model
########################### VARIABLES CHECKING ###########################
#VARIABLE FAMILY_EXPENDITURE
jarque.bera.test(df1$family_expenditure) #p-value < 0.05, I reject H0 about normal distribution
df1$ln_family_expenditure = log(df1$family_expenditure)
jarque.bera.test(df1$ln_family_expenditure) #p-value < 0.05
plotNormalHistogram(df1$family_expenditure, prob = FALSE,
main = "family_expenditure and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$ln_family_expenditure, prob = FALSE,
main = "ln_family_expenditure and normal distribution",
linecol = "red",
length = 1000)
#family_expenditure will be placed in model
########################### VARIABLES CHECKING ###########################
#VARIABLE CHILDREN
jarque.bera.test(df1$children) #p-value < 0.05, I reject H0 about normal distribution
df1$ln_children = log(df1$children)
jarque.bera.test(df1$ln_children) #p-value < 0.05, but p-value is higher
plotNormalHistogram(df1$children, prob = FALSE,
main = "children and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$ln_children, prob = FALSE,
main = "ln_children and normal distribution",
linecol = "red",
length = 1000)
#i decided to use basic version of thos variable, because i want to create interaction this variable with other
########################### VARIABLES CHECKING ###########################
#VARIABLE NURSERY_PLACES
jarque.bera.test(df1$nursery_places) #p-value < 0.05, I reject H0 about normal distribution
df1$ln_nursery_places = log(df1$nursery_places)
jarque.bera.test(df1$ln_nursery_places) #p-value < 0.05, but p-value is higher
# nursery_places has values equal to 0, so I can't use the logarithm, because I get infinity values (log from 0 is equal to inf)
########################### VARIABLES CHECKING ###########################
#VARIABLE DOCTORS
jarque.bera.test(df1$doctors) #p-value < 0.05, I reject H0 about normal distribution
df1$ln_doctors = log(df1$doctors)
jarque.bera.test(df1$ln_doctors) #p-value < 0.05, but p-value is higher
plotNormalHistogram(df1$doctors, prob = FALSE,
main = "doctors and normal distribution",
linecol = "red",
length = 1000)
plotNormalHistogram(df1$ln_doctors,prob = FALSE,
main = "ln_doctors and normal distribution",
linecol = "red",
length = 1000)
#ln_doctors will be placed in model
########################### VARIABLES CHECKING ###########################
#VARIABLE URBANISATION_RATE
jarque.bera.test(df1$urbanisation_rate) #p-value < 0.05, but p-value is higher than in the next case
df1$ln_urbanisation_rate = log(df1$urbanisation_rate)
jarque.bera.test(df1$ln_urbanisation_rate) #p-value < 0.05
g_urbanisation_rate<-ggplot(df1, aes(x=birth_rate, y=urbanisation_rate)) +geom_point(color="red")
g_urbanisation_rate
plotNormalHistogram(df1$urbanisation_rate, prob = FALSE,
main = "urbanisation_rate and normal distribution",
linecol = "red",
length = 1000)
#urbanisation_rate without log appears to have a distribution more similar to the normal distribution
########################### VARIABLES CHECKING ###########################
#VARIABLE BUS STOPS
jarque.bera.test(df1$bus_stops) #p-value < 0.05, I reject H0 about normal distribution
df1$ln_bus_stops = log(df1$bus_stops)
jarque.bera.test(df1$ln_bus_stops) #p-value < 0.05, but p-value is higher
#ln_bus_stops will be placed in model
############################################################################################
########################### CREATE INTERACTION BETWEEN VARIABLES ###########################
df1$nurseryxchildren=df1$nursery_places*df1$children
df1$education_expenditurexchildren=df1$education_expenditure*df1$children
df1$houses_area_pc_2 = df1$houses_area_pc**2
###################################################################
########################### FIRST MODEL ###########################
#MODEL 1
model1=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_covid19_quarantine + ln_marriage_rate + ln_marriage_rate +
divorce_rate + budget_reve_pc + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary +
ln_women_working + ln_men_working + ln_median_house_price + house_ratio + houses_area_pc + houses_area_pc_2 +
avg_people_per_house + education_expenditure + health_expenditure + ln_social_expenditure + family_expenditure +
children + nursery_places + ln_doctors+ urbanisation_rate + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model1)
resettest(model1, power=2:3, type="fitted")
library("lmtest")
library("foreign")
resettest(model1, power=2:3, type="fitted")
resettest(model1, power=2:3, type="regressor")
df1$avg_salary_2 = df1$avg_salary**2
###################################################################
########################### FIRST MODEL ###########################
#MODEL 1
model1=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_covid19_quarantine + ln_marriage_rate + ln_marriage_rate +
divorce_rate + budget_reve_pc + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary +
avg_salary_2 +
ln_women_working + ln_men_working + ln_median_house_price + house_ratio + houses_area_pc + houses_area_pc_2 +
avg_people_per_house + education_expenditure + health_expenditure + ln_social_expenditure + family_expenditure +
children + nursery_places + ln_doctors+ urbanisation_rate + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model1)
df1$budget_reve_pc_2  df1$budget_reve_pc**2
###################################################################
########################### FIRST MODEL ###########################
#MODEL 1
model1=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_covid19_quarantine + ln_marriage_rate + ln_marriage_rate +
divorce_rate + budget_reve_pc + budget_reve_pc_2 + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary +
ln_women_working + ln_men_working + ln_median_house_price + house_ratio + houses_area_pc + houses_area_pc_2 +
avg_people_per_house + education_expenditure + health_expenditure + ln_social_expenditure + family_expenditure +
children + nursery_places + ln_doctors+ urbanisation_rate + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model1)
df1$budget_reve_pc_2 = df1$budget_reve_pc**2
df1$houses_area_pc_2 = df1$houses_area_pc**2
###################################################################
########################### FIRST MODEL ###########################
#MODEL 1
model1=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_covid19_quarantine + ln_marriage_rate + ln_marriage_rate +
divorce_rate + budget_reve_pc + budget_reve_pc_2 + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary +
ln_women_working + ln_men_working + ln_median_house_price + house_ratio + houses_area_pc + houses_area_pc_2 +
avg_people_per_house + education_expenditure + health_expenditure + ln_social_expenditure + family_expenditure +
children + nursery_places + ln_doctors+ urbanisation_rate + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model1)
###################################################################
########################### FIRST MODEL ###########################
#MODEL 1
model1=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_covid19_quarantine + ln_marriage_rate + ln_marriage_rate +
divorce_rate + budget_reve_pc + budget_reve_pc_2 + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary + avg_salary_2+
ln_women_working + ln_men_working + ln_median_house_price + house_ratio + houses_area_pc + houses_area_pc_2 +
avg_people_per_house + education_expenditure + health_expenditure + ln_social_expenditure + family_expenditure +
children + nursery_places + ln_doctors+ urbanisation_rate + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model1)
###################################################################
########################### FIRST MODEL ###########################
#MODEL 1
model1=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_covid19_quarantine + ln_marriage_rate +
divorce_rate + budget_reve_pc + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary +
ln_women_working + ln_men_working + ln_median_house_price + house_ratio + houses_area_pc + houses_area_pc_2 +
avg_people_per_house + education_expenditure + health_expenditure + ln_social_expenditure + family_expenditure +
children + nursery_places + ln_doctors+ urbanisation_rate + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model1)
###################################################################
########################### FIRST MODEL ###########################
#MODEL 1
model1=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_covid19_quarantine + ln_marriage_rate +
divorce_rate + budget_reve_pc + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary +
avg_salary_2 +
ln_women_working + ln_men_working + ln_median_house_price + house_ratio + houses_area_pc + houses_area_pc_2 +
avg_people_per_house + education_expenditure + health_expenditure + ln_social_expenditure + family_expenditure +
children + nursery_places + ln_doctors+ urbanisation_rate + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model1)
df1$education_expenditure_2 = df1$education_expenditure**2
###################################################################
########################### FIRST MODEL ###########################
#MODEL 1
model1=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_covid19_quarantine + ln_marriage_rate +
divorce_rate + budget_reve_pc + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary +
avg_salary_2 +
ln_women_working + ln_men_working + ln_median_house_price + house_ratio + houses_area_pc + houses_area_pc_2 +
avg_people_per_house + education_expenditure + education_expenditure_2 + health_expenditure + ln_social_expenditure + family_expenditure +
children + nursery_places + ln_doctors+ urbanisation_rate + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model1)
###################################################################
########################### FIRST MODEL ###########################
#MODEL 1
model1=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_covid19_quarantine + ln_marriage_rate +
divorce_rate + budget_reve_pc + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary +
avg_salary_2 +
ln_women_working + ln_men_working + ln_median_house_price + house_ratio + houses_area_pc + houses_area_pc_2 +
avg_people_per_house + education_expenditure + health_expenditure + ln_social_expenditure + family_expenditure +
children + nursery_places + ln_doctors+ urbanisation_rate + urbanisation_rate_2+ ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model1)
model1=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_covid19_quarantine + ln_marriage_rate +
divorce_rate + budget_reve_pc + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary +
avg_salary_2 +
ln_women_working + ln_men_working + ln_median_house_price + house_ratio + houses_area_pc + houses_area_pc_2 +
avg_people_per_house + education_expenditure + health_expenditure + ln_social_expenditure + family_expenditure +
children + nursery_places + ln_doctors+ urbanisation_rate + urbanisation_rate_2+ ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model1)
df1$budget_reve_pc_2 = df1$budget_reve_pc**2
df1$houses_area_pc_2 = df1$houses_area_pc**2
df1$urbanisation_rate_2 = df1$urbanisation_rate**2
model1=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_covid19_quarantine + ln_marriage_rate +
divorce_rate + budget_reve_pc + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary +
avg_salary_2 +
ln_women_working + ln_men_working + ln_median_house_price + house_ratio + houses_area_pc + houses_area_pc_2 +
avg_people_per_house + education_expenditure + health_expenditure + ln_social_expenditure + family_expenditure +
children + nursery_places + ln_doctors+ urbanisation_rate + urbanisation_rate_2+ ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model1)
model1=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_covid19_quarantine + ln_marriage_rate +
divorce_rate + budget_reve_pc + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary +
ln_women_working + ln_men_working + ln_median_house_price + house_ratio + houses_area_pc + houses_area_pc_2 +
avg_people_per_house + education_expenditure + health_expenditure + ln_social_expenditure + family_expenditure +
children + nursery_places + ln_doctors+ urbanisation_rate + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model1)
resettest(model1, power=2:3, type="fitted")
linearHypothesis(model=model1, c("children=0"))
library("car")
linearHypothesis(model=model1, c("children=0"))
linearHypothesis(model=model1, c("children=0", "houses_area_pc_2=0")) #p-value is almost equal to 1, so children is insignificant
linearHypothesis(model=model1, c("children=0", "houses_area_pc_2=0", "houses_area_pc=0")) #p-value is almost equal to 1
df1$avg_people_per_house_2 = df1$avg_people_per_house**2
###################################################################
########################### FIRST MODEL ###########################
#MODEL 1
model1=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_covid19_quarantine + ln_marriage_rate +
divorce_rate + budget_reve_pc + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary +
ln_women_working + ln_men_working + ln_median_house_price + house_ratio + houses_area_pc + houses_area_pc_2 +
avg_people_per_house +avg_people_per_house_2+ education_expenditure + health_expenditure + ln_social_expenditure + family_expenditure +
children + nursery_places + ln_doctors+ urbanisation_rate + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model1)
model1=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_covid19_quarantine + ln_marriage_rate +
divorce_rate + budget_reve_pc + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary +
ln_women_working + ln_men_working + ln_median_house_price + house_ratio + houses_area_pc + houses_area_pc_2 +
avg_people_per_house +avg_people_per_house_2+ education_expenditure + health_expenditure + ln_social_expenditure +
family_expenditure + children + nursery_places + ln_doctors+ urbanisation_rate + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model1)
resettest(model1, power=2:3, type="fitted")
resettest(model1, power=2:3, type="regressor")
linearHypothesis(model=model1, c("ln_covid19_quarantine=0")) #p-value is almost equal to 1, so children is insignificant
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0")) #p-value is almost equal to 1
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc=0")) #p-value is almost equal to 1
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc=0", "nursery_places=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc=0", "nursery_places=0",
"children=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc=0", "nursery_places=0",
"children=0", "houses_area_pc=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc=0", "nursery_places=0",
"children=0", "houses_area_pc=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc=0", "nursery_places=0",
"children=0", "budget_reve_pc=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc_2=0")) #p-value is almost equal to 1
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc_2=0", "nursery_places=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc_2=0", "nursery_places=0",
"children=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc_2=0", "nursery_places=0",
"children=0", "budget_re"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc_2=0", "nursery_places=0",
"children=0", "houses_area_pc=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc_2=0", "nursery_places=0",
"children=0", "houses_area_pc=0", "budget_reve_pc=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc_2=0", "nursery_places=0",
"children=0", "houses_area_pc=0", "budget_reve_pc=0", "urbanisation_rate=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc_2=0", "nursery_places=0",
"children=0", "houses_area_pc=0", "budget_reve_pc=0", "urbanisation_rate=0",
"health_expenditure=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc_2=0", "nursery_places=0",
"children=0", "houses_area_pc=0", "budget_reve_pc=0", "urbanisation_rate=0",
"health_expenditure=0", "avg_people_per_house=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc_2=0", "nursery_places=0",
"children=0", "houses_area_pc=0", "budget_reve_pc=0", "urbanisation_rate=0",
"health_expenditure=0", "avg_people_per_house=0", "ang_people_per_house_2=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc_2=0", "nursery_places=0",
"children=0", "houses_area_pc=0", "budget_reve_pc=0", "urbanisation_rate=0",
"health_expenditure=0", "avg_people_per_house=0", "avg_people_per_house_2=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc_2=0", "nursery_places=0",
"children=0", "houses_area_pc=0", "budget_reve_pc=0", "urbanisation_rate=0",
"health_expenditure=0", "avg_people_per_house=0", "avg_people_per_house_2=0",
"education_expenditure=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "ln_women_working=0", "houses_area_pc_2=0", "nursery_places=0",
"children=0", "houses_area_pc=0", "budget_reve_pc=0", "urbanisation_rate=0",
"health_expenditure=0", "avg_people_per_house=0", "avg_people_per_house_2=0",
"education_expenditure=0", "ln_femininity_ratio=0"))
model2=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_marriage_rate +
divorce_rate + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary + ln_men_working +
ln_median_house_price + house_ratio +ln_social_expenditure + family_expenditure + ln_doctors + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model2)
resettest(model2, power=2:3, type="fitted")
resettest(model2, power=2:3, type="regressor")
####################################################################
########################### SECOND MODEL ###########################
#MODEL 2
model2=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_marriage_rate +
divorce_rate + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary + ln_men_working +
ln_median_house_price + house_ratio +ln_social_expenditure + family_expenditure + ln_doctors + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model2)
linearHypothesis(model=model1, c("ln_median_house_price=0")) #p-value is almost equal to 1, so variable is insignificant
#MODEL 2
model2=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_marriage_rate +
divorce_rate + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary + avg_salary_2 + ln_men_working +
ln_median_house_price + house_ratio + house_ratio_2 +ln_social_expenditure + family_expenditure + ln_doctors + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model2)
#MODEL 2
model3=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_marriage_rate +
divorce_rate + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary + avg_salary_2 + ln_men_working +
ln_median_house_price + house_ratio + house_ratio_2 +ln_social_expenditure + family_expenditure + ln_doctors + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model3)
df1$avg_salary_2 = df1$avg_salary**2
df1$house_ratio_2 = df1$house_ratio**2
#MODEL 2
model3=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_marriage_rate +
divorce_rate + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary + avg_salary_2 + ln_men_working +
ln_median_house_price + house_ratio + house_ratio_2 +ln_social_expenditure + family_expenditure + ln_doctors + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model3)
#MODEL 2
model3=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_marriage_rate +
divorce_rate + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary + ln_men_working +
ln_median_house_price + house_ratio + house_ratio_2 +ln_social_expenditure + family_expenditure + ln_doctors + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model3)
####################################################################
########################### SECOND MODEL ###########################
#MODEL 2
model2=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_marriage_rate +
divorce_rate + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary + ln_men_working +
ln_median_house_price + house_ratio +ln_social_expenditure + family_expenditure + ln_doctors + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model2)
linearHypothesis(model=model1, c("ln_median_house_price=0"))
resettest(model2, power=2:3, type="fitted")
resettest(model2, power=2:3, type="regressor")
#MODEL 3
model3=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_marriage_rate +
divorce_rate + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary + ln_men_working +
ln_median_house_price + house_ratio + house_ratio_2 +ln_social_expenditure + family_expenditure + ln_doctors + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model3)
linearHypothesis(model=model2, c("ln_median_house_price=0"))
####################################################################
########################### SECOND MODEL ###########################
#MODEL 2
model2=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_marriage_rate +
divorce_rate + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary + ln_men_working +
ln_median_house_price + house_ratio +ln_social_expenditure + family_expenditure + ln_doctors + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model2)
#MODEL 3
model3=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_marriage_rate +
divorce_rate + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary + ln_men_working +
house_ratio + house_ratio_2 +ln_social_expenditure + family_expenditure + ln_doctors + ln_bus_stops +
nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model3)
resettest(model3, power=2:3, type="fitted")
resettest(model3, power=2:3, type="regressor")
df1$house_ratio_2 = df1$house_ratio**2
###################################################################
########################### FIRST MODEL ###########################
#MODEL 1
model1=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_covid19_quarantine + ln_marriage_rate +
divorce_rate + budget_reve_pc + ln_unemployment_rate + women_reproductive + ln_femininity_ratio + avg_salary +
ln_women_working + ln_men_working + ln_median_house_price + house_ratio + house_ratio_2 + houses_area_pc +
houses_area_pc_2 + avg_people_per_house +avg_people_per_house_2+ education_expenditure + health_expenditure +
ln_social_expenditure + family_expenditure + children + nursery_places + ln_doctors+ urbanisation_rate +
ln_bus_stops + nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model1)
resettest(model1, power=2:3, type="fitted")
resettest(model1, power=2:3, type="regressor")
summary(model1)
linearHypothesis(model=model1, c("ln_covid19_quarantine=0")) #p-value is almost equal to 1, so variable is insignificant
linearHypothesis(model=model1, c("ln_covid19_quarantine=0")) #p-value is almost equal to 1, so variable is insignificant
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "houses_area_pc_2=0")) #p-value is almost equal to 1
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "houses_area_pc_2=0", "houses_area_pc=0")) #p-value is almost equal to 1
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "houses_area_pc_2=0", "houses_area_pc=0", "ln_women_working=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "houses_area_pc_2=0", "houses_area_pc=0", "ln_women_working=0",
"children=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "houses_area_pc_2=0", "houses_area_pc=0", "ln_women_working=0",
"children=0", "budget_reve_pc=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "houses_area_pc_2=0", "houses_area_pc=0", "ln_women_working=0",
"children=0", "budget_reve_pc=0", "nursery_places=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "houses_area_pc_2=0", "houses_area_pc=0", "ln_women_working=0",
"children=0", "budget_reve_pc=0", "nursery_places=0", "education_expenditure=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "houses_area_pc_2=0", "houses_area_pc=0", "ln_women_working=0",
"children=0", "budget_reve_pc=0", "nursery_places=0", "education_expenditure=0",
"urbanisation_rate=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "houses_area_pc_2=0", "houses_area_pc=0", "ln_women_working=0",
"children=0", "budget_reve_pc=0", "nursery_places=0", "education_expenditure=0",
"urbanisation_rate=0", "health_expenditure=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "houses_area_pc_2=0", "houses_area_pc=0", "ln_women_working=0",
"children=0", "budget_reve_pc=0", "nursery_places=0", "education_expenditure=0",
"urbanisation_rate=0", "health_expenditure=0", "avg_people_per_house=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "houses_area_pc_2=0", "houses_area_pc=0", "ln_women_working=0",
"children=0", "budget_reve_pc=0", "nursery_places=0", "education_expenditure=0",
"urbanisation_rate=0", "health_expenditure=0", "avg_people_per_house=0",
"ln_femininity_ratio=0"))
linearHypothesis(model=model1, c("ln_covid19_quarantine=0", "houses_area_pc_2=0", "houses_area_pc=0", "ln_women_working=0",
"children=0", "budget_reve_pc=0", "nursery_places=0", "education_expenditure=0",
"urbanisation_rate=0", "health_expenditure=0", "avg_people_per_house=0",
"ln_femininity_ratio=0", "avg_people_per_house_2=0"))
resettest(model1, power=2:3, type="fitted")
model2=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_marriage_rate + divorce_rate + ln_unemployment_rate +
women_reproductive + avg_salary + ln_men_working + ln_median_house_price + house_ratio + house_ratio_2 +
ln_social_expenditure + family_expenditure + ln_doctors + ln_bus_stops + nurseryxchildren +
education_expenditurexchildren, data=df1)
summary(model2)
linearHypothesis(model=model2, c("ln_median_house_price=0"))
resettest(model2, power=2:3, type="fitted")
resettest(model2, power=2:3, type="regressor")
#MODEL 3
model3=lm(ln_birth_rate~ln_covid19_cases + covid19_deaths + ln_marriage_rate + divorce_rate + ln_unemployment_rate +
women_reproductive + avg_salary + ln_men_working + house_ratio + house_ratio_2 + ln_social_expenditure +
family_expenditure + ln_doctors + ln_bus_stops + nurseryxchildren + education_expenditurexchildren, data=df1)
summary(model3)
resettest(model3, power=2:3, type="fitted")
resettest(model3, power=2:3, type="regressor")
bptest(model3, studentize=TRUE)
jarque.bera.test(model3$residuals)
dwtest(model3)
#breuscha godfreya
bgtest(model3)
